{"version":3,"sources":["components/utils/geoDistance.js","components/Home.js","components/Scanner.js","components/CollectionOfData.js","components/PieceOfData.js","App.js","reportWebVitals.js","index.js"],"names":["toRadian","degrees","Math","PI","geoDistance","coordinates1","coordinates2","lat1","latitude","lon1","longitude","lat2","lon2","asin","sqrt","pow","sin","cos","formatCoords","coords","toFixed","subsribeToPosition","setCoords","watchID","navigator","geolocation","watchPosition","position","error","console","log","enableHighAccuracy","clearWatch","Home","coordinates","useState","weather","setWeather","daysOfWeek","userCoords","setUserCoords","useEffect","fetch","then","response","json","data","catch","err","accuracy","daily","slice","map","day","Date","dt","getDay","temp","min","max","wind_speed","rain","humidity","description","Scanner","setChosenData","toPieceOfData","qrCodeNotInDatabase","setQrCodeNotInDatabase","delay","onError","onScan","qrCode","storedData","JSON","parse","localStorage","getItem","includes","push","setItem","stringify","Object","keys","items","facingMode","CollectionOfData","className","filter","key","value","onClick","name","PieceOfData","pieceOfData","type","trait","App","isHomeShown","setIsHomeShown","isScannerShown","setScannerShown","isCollectionOfDataShown","setIsCollectionOfDataShown","isPieceOfDataShown","setIsPieceOfDataShown","chosenData","setData","process","headers","Accept","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d58e02.chunk.js","sourcesContent":["function toRadian(degrees) {\r\n  return (degrees * 2 * Math.PI) / 360;\r\n}\r\n\r\nexport function geoDistance(coordinates1, coordinates2) {\r\n  // Haversine formula: https://en.wikipedia.org/wiki/Haversine_formula\r\n  // Stable formula for short distances\r\n  // Earth is an ellipsoid, so different latitudes have different radiuses\r\n  // Earth radius changes from 6357 km ... 6378 km\r\n  const earthRadiusAtPipishegy = 6366.442 * 1000;\r\n  const lat1 = toRadian(coordinates1.latitude);\r\n  const lon1 = toRadian(coordinates1.longitude);\r\n  const lat2 = toRadian(coordinates2.latitude);\r\n  const lon2 = toRadian(coordinates2.longitude);\r\n  return (\r\n    2 *\r\n    earthRadiusAtPipishegy *\r\n    Math.asin(Math.sqrt(Math.pow(Math.sin((lat2 - lat1) / 2), 2) + Math.cos(lat2) * Math.cos(lat1) * Math.pow(Math.sin((lon2 - lon1) / 2), 2)))\r\n  );\r\n}\r\n\r\nexport function formatCoords(coords) {\r\n  return \"\" + coords.latitude.toFixed(6) + \", \" + coords.longitude.toFixed(6);\r\n}\r\n\r\nexport function subsribeToPosition(setCoords) {\r\n  return () => {\r\n    const watchID = navigator.geolocation.watchPosition(\r\n      (position) => setCoords(position.coords),\r\n      (error) => console.log(\"Error:\", error),\r\n      { enableHighAccuracy: true }\r\n    );\r\n\r\n    return () => navigator.geolocation.clearWatch(watchID);\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { geoDistance, formatCoords, subsribeToPosition } from \"./utils/geoDistance\";\r\n\r\nfunction Home() {\r\n  //Gyöngyös, Pipishegyi repülőtér\r\n  const coordinates = {\r\n    latitude: 47.814303,\r\n    longitude: 19.9784174,\r\n  };\r\n  const APIkey = \"23c16eed06c02fd60c74cdaf0b3558f3\";\r\n  const [weather, setWeather] = useState(null);\r\n  const daysOfWeek = [\"Vasárnap\", \"Hétfő\", \"Kedd\", \"Szerda\", \"Csütörtök\", \"Péntek\", \"Szombat\"];\r\n  const [userCoords, setUserCoords] = useState(null);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(subsribeToPosition(setUserCoords), []);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.latitude}&lon=${coordinates.longitude}&exclude=minutely,hourly&units=metric&lang=hu&appid=${APIkey}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWeather(data);\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(\"Error:\", err));\r\n  }, [coordinates.latitude, coordinates.longitude]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Főhadiszállás</h3>\r\n      <ul>\r\n        <li>Koordináták: {formatCoords(coordinates)}</li>\r\n        {userCoords ? (\r\n          <li>\r\n            Távolság: {geoDistance(coordinates, userCoords).toFixed(0)} m (±{userCoords.accuracy.toFixed(0)} m){\" \"}\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ul>\r\n\r\n      {weather?.daily.slice(0, 3).map((day) => (\r\n        <div key={day.dt}>\r\n          <h3>{daysOfWeek[new Date(day.dt * 1000).getDay()]}</h3>\r\n          <div>\r\n            Hőmérséklet: {day.temp.min.toFixed(0)} - {day.temp.max.toFixed(0)} °C\r\n          </div>\r\n          <div>Szélsebesség: {day.wind_speed} m/s</div>\r\n          <div>Csapadék: {day.rain ? day.rain.toFixed(2) : (0).toFixed(2)} mm</div>\r\n          <div>Páratartalom: {day.humidity.toFixed(0)}%</div>\r\n\r\n          {/* <WeatherIcon code={day.weather[0].icon} size=\"50px\"/> */}\r\n          <div>{day.weather[0].description}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nfunction Scanner({ data, setChosenData, toPieceOfData }) {\r\n  const [qrCodeNotInDatabase, setQrCodeNotInDatabase] = useState(\"\");\r\n\r\n  const handleScan = (qrCode) => {\r\n    if (qrCode !== null) {\r\n      let storedData = JSON.parse(localStorage.getItem(\"scanned\")) || [];\r\n      if (!storedData.includes(qrCode)) {\r\n        storedData.push(qrCode);\r\n        localStorage.setItem(\"scanned\", JSON.stringify(storedData));\r\n      }\r\n      if (Object.keys(data.items).includes(qrCode)) {\r\n        setChosenData(data.items[qrCode]);\r\n\r\n        toPieceOfData();\r\n      } else {\r\n        setQrCodeNotInDatabase(qrCode);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => console.error(err);\r\n\r\n  return (\r\n    <div>\r\n      {qrCodeNotInDatabase === \"\" ? (\r\n        <h3>Scanning...</h3>\r\n      ) : (\r\n        <div>\r\n          <h3>Scanned:</h3>\r\n          <p>{qrCodeNotInDatabase}</p>\r\n        </div>\r\n      )}\r\n\r\n      <QrReader delay={300} onError={handleError} onScan={handleScan} facingMode=\"environment\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scanner;\r\n","import React from \"react\";\r\n\r\nfunction CollectionOfData({ data, setChosenData, toPieceOfData }) {\r\n  return (\r\n    <div className=\"collection-of-data\">\r\n      <h1>Összegyűjtött Adatok</h1>\r\n      {data &&\r\n        Object.keys(data.items)\r\n          .filter((key) => JSON.parse(localStorage.getItem(\"scanned\"))?.includes(key))\r\n          .map((key) => {\r\n            let value = data.items[key];\r\n            return (\r\n              <h2\r\n                onClick={() => {\r\n                  setChosenData(value);\r\n                  toPieceOfData();\r\n                }}\r\n                key={key}\r\n              >\r\n                {value.name}\r\n              </h2>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\nexport default CollectionOfData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { geoDistance, formatCoords, subsribeToPosition } from \"./utils/geoDistance\";\r\n\r\nfunction PieceOfData({ pieceOfData }) {\r\n  const [userCoords, setUserCoords] = useState(null);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(subsribeToPosition(setUserCoords), []);\r\n\r\n  return (\r\n    <div className=\"piece-of-data\">\r\n      <h2 className=\"button-effect selected\">{pieceOfData.name}</h2>\r\n\r\n      <ul>\r\n        <li>Típus: {pieceOfData.type}</li>\r\n        {pieceOfData.coordinates ? <li>Bemérve: {formatCoords(pieceOfData.coordinates)}</li> : \"\"}\r\n        {pieceOfData.coordinates && userCoords ? (\r\n          <li>\r\n            Távolság: {geoDistance(pieceOfData.coordinates, userCoords).toFixed(0)} m (±{userCoords.accuracy.toFixed(0)} m){\" \"}\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ul>\r\n      <ul>\r\n        {pieceOfData.description.map((trait, key) => (\r\n          <li key={key}>{trait}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default PieceOfData;\r\n","import \"./App.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Home from \"./components/Home\";\r\nimport Scanner from \"./components/Scanner\";\r\nimport CollectionOfData from \"./components/CollectionOfData\";\r\nimport PieceOfData from \"./components/PieceOfData\";\r\n\r\nfunction App() {\r\n  const [isHomeShown, setIsHomeShown] = useState(true);\r\n  const [isScannerShown, setScannerShown] = useState(false);\r\n  const [isCollectionOfDataShown, setIsCollectionOfDataShown] = useState(false);\r\n  const [isPieceOfDataShown, setIsPieceOfDataShown] = useState(false);\r\n  const [chosenData, setChosenData] = useState(null);\r\n\r\n  const toHome = () => {\r\n    setIsHomeShown(true);\r\n    setIsCollectionOfDataShown(false);\r\n    setIsPieceOfDataShown(false);\r\n    setScannerShown(false);\r\n  };\r\n\r\n  const toCollectionOfData = () => {\r\n    setIsHomeShown(false);\r\n    setIsCollectionOfDataShown(true);\r\n    setIsPieceOfDataShown(false);\r\n    setScannerShown(false);\r\n    setChosenData(null);\r\n  };\r\n\r\n  const toPieceOfData = () => {\r\n    setIsHomeShown(false);\r\n    setIsCollectionOfDataShown(false);\r\n    setIsPieceOfDataShown(true);\r\n    setScannerShown(false);\r\n  };\r\n\r\n  const toScanner = () => {\r\n    setIsHomeShown(false);\r\n    setIsCollectionOfDataShown(false);\r\n    setIsPieceOfDataShown(false);\r\n    setScannerShown(true);\r\n    setChosenData(null);\r\n  };\r\n\r\n  const [data, setData] = useState({ items: {} });\r\n\r\n  const fetchData = () => {\r\n    fetch(process.env.PUBLIC_URL + \"/data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then(setData);\r\n  };\r\n\r\n  useEffect(fetchData, [setData]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button className={`home-button button-effect ${isHomeShown ? \"selected\" : null}`} onClick={toHome}>\r\n        Adamish SX7\r\n      </button>\r\n\r\n      <main>\r\n        <div className=\"decor-box\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <article>\r\n          {isHomeShown && <Home />}\r\n          {isScannerShown && <Scanner data={data} setChosenData={setChosenData} toPieceOfData={toPieceOfData} />}\r\n          {isCollectionOfDataShown && <CollectionOfData data={data} setChosenData={setChosenData} toPieceOfData={toPieceOfData} />}\r\n          {isPieceOfDataShown && <PieceOfData pieceOfData={chosenData} />}\r\n        </article>\r\n      </main>\r\n\r\n      <nav>\r\n        <button className={`button-effect ${isCollectionOfDataShown ? \"selected\" : null}`} onClick={toCollectionOfData}>\r\n          Adatok\r\n        </button>\r\n        <button className={`button-effect ${isScannerShown ? \"selected\" : null}`} onClick={toScanner}>\r\n          Scanner\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}